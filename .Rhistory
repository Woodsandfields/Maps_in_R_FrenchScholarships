Volcano_Eruptive_Volume <- c(1000, 100000000, 1000000000)
Volcano_Frequency_in_years <- c(1, 1.5, 10)
Volcano_name = c("Kilauea","EyjafjallajÃ¶kull","Mount St. Helens" )
##creating Data Frame
Volcanoes <- data.frame(Volcano_Eruptive_Volume,Volcano_Frequency_in_years, Volcano_name)
library(ggplot2)
ggplot(data=Volcanoes)+
geom_point(mapping=aes(x=Volcano_Eruptive_Volume, y=Volcano_Frequency_in_years, color=Volcano_name))
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/First.R')
View(finalTidy)
View(finalTidy)
names(finalTidy)
source('~/.active-rstudio-document', echo=TRUE)
#### DATA VIZ ####
myPlot <- ggplot(finalTidy, aes(x=Years, y=finaltidy$*, color = "blue")) + geom_point(color="group") +
geom_line(color="red") +
# myPlot <- ggplot(finalTidy, aes(x=Years, y=MO, group = "MO")) + geom_point(color="red") +
#         geom_line(color="red") +
#         geom_point(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_line(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_point(mapping = aes(x=Years, y=Maghreb, group = "Maghreb", color="Maghreb"), color="green") +
#         geom_line(mapping = aes(x=Years, y=Maghreb, group = "Maghreb"), color="green") +
#         geom_point(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black") +
#         geom_line(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black")+
#         geom_point(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_line(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_point(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_line(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_point(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         geom_line(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         ylab("Number of scholarships")+
#         labs(caption="LEGEND: Blue: European Union / Yellow: Europe outside the EU / Orange: Subsaharian Africa /
#              Green:Maghreb / Grey: Asia and Oceania / Black: Americas")+
#         ggtitle("Inviting students to France", subtitle="Scholarships given by the French government to foreign students 2006-2011")
#
print(myPlot)
library(R.utils)
library(data.table)
library(readr)
library(ggplot2)
library(dplyr)
## (ggplot) + annotate("text",label= "Lost 8 points because of bad luck!", x= "Arsenal", y=-3) +
#### DATA DWNLD ####
dataUrl <- 'http://www.data.gouv.fr/fr/datasets/r/dd3b4807-d90c-46fe-b03a-2ad250db979f'
download.file(dataUrl, "myData.csv")
globalData <- read.table("myData.csv", sep=";")
#### DATA TIDYING ####
tidyData <- globalData[4:15,2:7] %>%
apply(2, as.character) %>%
sub(" ", "", .) %>%
apply(2, as.numeric) %>%
as.data.frame(.)
#Putting years as rows (inverting rows and columns)
Years <- as.factor(as.character(c(2006:2011)))
finalTidy <- as.data.frame(t(tidyData)) %>%
cbind(Years, .)
Regions2 <- as.character(globalData[4:15,1])
Regions <- c("Years", "UE", "Eur_hors_UE", "Total_Eur", "Am_N", "Total_Am", "Total_Asie_O", "MO", "AfSubS_F", "AfSubS_nF","Total_AfSubS", "Maghreb", "Total_Ge")
colnames(finalTidy) <- Regions
rownames(finalTidy) <- Years
#### DATA VIZ ####
myPlot <- ggplot(finalTidy, aes(x=Years, y=finaltidy$*, color = "blue")) + geom_point(color="group") +
geom_line(color="red") +
# myPlot <- ggplot(finalTidy, aes(x=Years, y=MO, group = "MO")) + geom_point(color="red") +
#         geom_line(color="red") +
#         geom_point(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_line(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_point(mapping = aes(x=Years, y=Maghreb, group = "Maghreb", color="Maghreb"), color="green") +
#         geom_line(mapping = aes(x=Years, y=Maghreb, group = "Maghreb"), color="green") +
#         geom_point(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black") +
#         geom_line(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black")+
#         geom_point(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_line(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_point(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_line(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_point(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         geom_line(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         ylab("Number of scholarships")+
#         labs(caption="LEGEND: Blue: European Union / Yellow: Europe outside the EU / Orange: Subsaharian Africa /
#              Green:Maghreb / Grey: Asia and Oceania / Black: Americas")+
#         ggtitle("Inviting students to France", subtitle="Scholarships given by the French government to foreign students 2006-2011")
#
print(myPlot)
#
# ggsave('Wk3_finalPlot.png', width = 16, height = 9, dpi = 100)
View(Volcanoes)
View(Volcanoes)
View(myRegions)
View(myRegions)
View(finalTidy)
View(finalTidy)
library(R.utils)
library(data.table)
library(readr)
library(ggplot2)
library(dplyr)
## (ggplot) + annotate("text",label= "Lost 8 points because of bad luck!", x= "Arsenal", y=-3) +
#### DATA DWNLD ####
dataUrl <- 'http://www.data.gouv.fr/fr/datasets/r/dd3b4807-d90c-46fe-b03a-2ad250db979f'
download.file(dataUrl, "myData.csv")
globalData <- read.table("myData.csv", sep=";")
#### DATA TIDYING ####
tidyData <- globalData[4:15,2:7] %>%
apply(2, as.character) %>%
sub(" ", "", .) %>%
apply(2, as.numeric) %>%
as.data.frame(.)
#Putting years as rows (inverting rows and columns)
Years <- as.factor(as.character(c(2006:2011)))
finalTidy <- as.data.frame(t(tidyData)) %>%
cbind(Years, .)
Regions2 <- as.character(globalData[4:15,1])
Regions <- c("Years", "UE", "Eur_hors_UE", "Total_Eur", "Am_N", "Total_Am", "Total_Asie_O", "MO", "AfSubS_F", "AfSubS_nF","Total_AfSubS", "Maghreb", "Total_Ge")
colnames(finalTidy) <- Regions
rownames(finalTidy) <- Years
#### DATA VIZ ####
# myPlot <- ggplot(finalTidy, aes(x=Years, y=MO, group = "MO")) + geom_point(color="red") +
#         geom_line(color="red") +
#         geom_point(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_line(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_point(mapping = aes(x=Years, y=Maghreb, group = "Maghreb", color="Maghreb"), color="green") +
#         geom_line(mapping = aes(x=Years, y=Maghreb, group = "Maghreb"), color="green") +
#         geom_point(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black") +
#         geom_line(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black")+
#         geom_point(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_line(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_point(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_line(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_point(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         geom_line(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         ylab("Number of scholarships")+
#         labs(caption="LEGEND: Blue: European Union / Yellow: Europe outside the EU / Orange: Subsaharian Africa /
#              Green:Maghreb / Grey: Asia and Oceania / Black: Americas")+
#         ggtitle("Inviting students to France", subtitle="Scholarships given by the French government to foreign students 2006-2011")
#
print(myPlot)
class(finalTidy)
names(finalTidy)
finalTidy$V1
finalTidy[,1]
longData <- rbind(finalTidy[,c(1,2)], finalTidy[,c(1,3)])
finalTidy[,c(1,3)]
finalTidy[,c(1,2)]
data_UE <- cbind(finalTidy[,c(1,2)], rep("Eur", 60))
data_UE
data_UE <- cbind(finalTidy[,c(1,2)], rep("Eur", 6))
data_UE
data_UE <- cbind(finalTidy[,c(1,2)], Region:rep("Eur", 6))
data_UE <- cbind(finalTidy[,c(1,2)], Regio=rep("Eur", 6))
data_UE
names(finalTidy)
data_Eur <- cbind(finalTidy[,c(1,4)], Regio=rep("Europe", 6))
data_Am <- cbind(finalTidy[,c(1,6)], Regio=rep("America", 6))
data_Asia <- cbind(finalTidy[,c(1,7)], Regio=rep("Asia/OCeania", 6))
data_ME <- cbind(finalTidy[,c(1,8)], Regio=rep("Middle East", 6))
data_Afr <- cbind(finalTidy[,c(1,11)], Regio=rep("Sub-Saharan Africa", 6))
data_Magh <- cbind(finalTidy[,c(1,12)], Regio=rep("Maghreb", 6))
long_Data <- rbind(data_Afr, data_Am, data_Asia, data_Eur, data_Magh, data_ME)
data_Eur
names(data_Eur)<- c("Years", "Total", "Regio")
data_Eur
names(data_Eur)<- c("Years", "Total", "Regio")
names(data_Am)<- c("Years", "Total", "Regio")
names(data_Asia)<- c("Years", "Total", "Regio")
names(data_ME)<- c("Years", "Total", "Regio")
names(data_Afr)<- c("Years", "Total", "Regio")
names(data_Magh)<- c("Years", "Total", "Regio")
long_Data <- rbind(data_Afr, data_Am, data_Asia, data_Eur, data_Magh, data_ME)
long_Data
dim(long_Data)
library(R.utils)
library(data.table)
library(readr)
library(ggplot2)
library(dplyr)
## (ggplot) + annotate("text",label= "Lost 8 points because of bad luck!", x= "Arsenal", y=-3) +
#### DATA DWNLD ####
dataUrl <- 'http://www.data.gouv.fr/fr/datasets/r/dd3b4807-d90c-46fe-b03a-2ad250db979f'
download.file(dataUrl, "myData.csv")
globalData <- read.table("myData.csv", sep=";")
#### DATA TIDYING ####
tidyData <- globalData[4:15,2:7] %>%
apply(2, as.character) %>%
sub(" ", "", .) %>%
apply(2, as.numeric) %>%
as.data.frame(.)
#Putting years as rows (inverting rows and columns)
Years <- as.factor(as.character(c(2006:2011)))
finalTidy <- as.data.frame(t(tidyData)) %>%
cbind(Years, .)
Regions2 <- as.character(globalData[4:15,1])
Regions <- c("Years", "UE", "Eur_hors_UE", "Total_Eur", "Am_N", "Total_Am", "Total_Asie_O", "MO", "AfSubS_F", "AfSubS_nF","Total_AfSubS", "Maghreb", "Total_Ge")
colnames(finalTidy) <- Regions
rownames(finalTidy) <- Years
##
data_Eur <- cbind(finalTidy[,c(1,4)], Regio=rep("Europe", 6))
data_Am <- cbind(finalTidy[,c(1,6)], Regio=rep("America", 6))
data_Asia <- cbind(finalTidy[,c(1,7)], Regio=rep("Asia/OCeania", 6))
data_ME <- cbind(finalTidy[,c(1,8)], Regio=rep("Middle East", 6))
data_Afr <- cbind(finalTidy[,c(1,11)], Regio=rep("Sub-Saharan Africa", 6))
data_Magh <- cbind(finalTidy[,c(1,12)], Regio=rep("Maghreb", 6))
names(data_Eur)<- c("Years", "Total", "Regio")
names(data_Am)<- c("Years", "Total", "Regio")
names(data_Asia)<- c("Years", "Total", "Regio")
names(data_ME)<- c("Years", "Total", "Regio")
names(data_Afr)<- c("Years", "Total", "Regio")
names(data_Magh)<- c("Years", "Total", "Regio")
long_Data <- rbind(data_Afr, data_Am, data_Asia, data_Eur, data_Magh, data_ME)
#### DATA VIZ ####
ScholPlot <- ggplot(long_Data, aes(x=Years, y=Total, color = "Regio")) + geom_point()
# myPlot <- ggplot(finalTidy, aes(x=Years, y=MO, group = "MO")) + geom_point(color="red") +
#         geom_line(color="red") +
#         geom_point(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_line(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_point(mapping = aes(x=Years, y=Maghreb, group = "Maghreb", color="Maghreb"), color="green") +
#         geom_line(mapping = aes(x=Years, y=Maghreb, group = "Maghreb"), color="green") +
#         geom_point(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black") +
#         geom_line(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black")+
#         geom_point(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_line(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_point(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_line(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_point(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         geom_line(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         ylab("Number of scholarships")+
#         labs(caption="LEGEND: Blue: European Union / Yellow: Europe outside the EU / Orange: Subsaharian Africa /
#              Green:Maghreb / Grey: Asia and Oceania / Black: Americas")+
#         ggtitle("Inviting students to France", subtitle="Scholarships given by the French government to foreign students 2006-2011")
#
print(myPlot)
#
# ggsave('Wk3_finalPlot.png', width = 16, height = 9, dpi = 100)
print(ScholPlot)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ScholPlot <- ggplot(data=long_Data) + geom_point(aes(x=Years, y=Total, color = Regio))
print(ScholPlot)
library(R.utils)
library(data.table)
library(readr)
library(ggplot2)
library(dplyr)
## (ggplot) + annotate("text",label= "Lost 8 points because of bad luck!", x= "Arsenal", y=-3) +
#### DATA DWNLD ####
dataUrl <- 'http://www.data.gouv.fr/fr/datasets/r/dd3b4807-d90c-46fe-b03a-2ad250db979f'
download.file(dataUrl, "myData.csv")
globalData <- read.table("myData.csv", sep=";")
#### DATA TIDYING ####
tidyData <- globalData[4:15,2:7] %>%
apply(2, as.character) %>%
sub(" ", "", .) %>%
apply(2, as.numeric) %>%
as.data.frame(.)
#Putting years as rows (inverting rows and columns)
Years <- as.factor(as.character(c(2006:2011)))
finalTidy <- as.data.frame(t(tidyData)) %>%
cbind(Years, .)
Regions2 <- as.character(globalData[4:15,1])
Regions <- c("Years", "UE", "Eur_hors_UE", "Total_Eur", "Am_N", "Total_Am", "Total_Asie_O", "MO", "AfSubS_F", "AfSubS_nF","Total_AfSubS", "Maghreb", "Total_Ge")
colnames(finalTidy) <- Regions
rownames(finalTidy) <- Years
##
data_Eur <- cbind(finalTidy[,c(1,4)], Region=rep("Europe", 6))
data_Am <- cbind(finalTidy[,c(1,6)], Region=rep("America", 6))
data_Asia <- cbind(finalTidy[,c(1,7)], Region=rep("Asia/OCeania", 6))
data_ME <- cbind(finalTidy[,c(1,8)], Region=rep("Middle East", 6))
data_Afr <- cbind(finalTidy[,c(1,11)], Region=rep("Sub-Saharan Africa", 6))
data_Magh <- cbind(finalTidy[,c(1,12)], Region=rep("Maghreb", 6))
names(data_Eur)<- c("Years", "Total", "Region")
names(data_Am)<- c("Years", "Total", "Region")
names(data_Asia)<- c("Years", "Total", "Region")
names(data_ME)<- c("Years", "Total", "Region")
names(data_Afr)<- c("Years", "Total", "Region")
names(data_Magh)<- c("Years", "Total", "Region")
long_Data <- rbind(data_Afr, data_Am, data_Asia, data_Eur, data_Magh, data_ME)
#### DATA VIZ ####
ScholPlot <- ggplot(data=long_Data) + geom_point(aes(x=Years, y=Total, color = Region))
print(ScholPlot)
# myPlot <- ggplot(finalTidy, aes(x=Years, y=MO, group = "MO")) + geom_point(color="red") +
#         geom_line(color="red") +
#         geom_point(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_line(mapping = aes(x=Years, y=UE, group = "UE"), color="blue") +
#         geom_point(mapping = aes(x=Years, y=Maghreb, group = "Maghreb", color="Maghreb"), color="green") +
#         geom_line(mapping = aes(x=Years, y=Maghreb, group = "Maghreb"), color="green") +
#         geom_point(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black") +
#         geom_line(mapping = aes(x=Years, y=Total_Am, group = "Total_Am"), color="black")+
#         geom_point(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_line(mapping = aes(x=Years, y=Eur_hors_UE, group = "Eur_hors_UE"), color="yellow") +
#         geom_point(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_line(mapping = aes(x=Years, y=Total_AfSubS, group = "Total_AfSubS"), color="orange") +
#         geom_point(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         geom_line(mapping = aes(x=Years, y=Total_Asie_O, group = "Total_Asie_O"), color="grey") +
#         ylab("Number of scholarships")+
#         labs(caption="LEGEND: Blue: European Union / Yellow: Europe outside the EU / Orange: Subsaharian Africa /
#              Green:Maghreb / Grey: Asia and Oceania / Black: Americas")+
#         ggtitle("Inviting students to France", subtitle="Scholarships given by the French government to foreign students 2006-2011")
#
#print(myPlot)
#
# ggsave('Wk3_finalPlot.png', width = 16, height = 9, dpi = 100)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ScholPlot <- ggplot(data=long_Data) + geom_point(aes(x=Years, y=Total, color = Region)) + geom_line(aes(x=Years, y=Total, color = Region))
print(ScholPlot)
ScholPlot <- ggplot(data=long_Data) + geom_line(aes(x=Years, y=Total, color = Region))
ScholPlot <- ggplot(data=long_Data) + geom_line(aes(x=Years, y=Total, color = Region))
print(ScholPlot)
ScholPlot <- ggplot(data=long_Data) + geom_point(aes(x=Years, y=Total, color = Region))
print(ScholPlot)
ScholPlot <- ggplot(data=long_Data) + geom_point(aes(x=Years, y=Total, color = Region)) +
geom_line(aes(x=Years, y=Total, group = Region))
print(ScholPlot)
ScholPlot <- ggplot(data=long_Data) + geom_point(aes(x=Years, y=Total, color = Region)) +
geom_line(aes(x=Years, y=Total, group = Region), color = Region)
print(ScholPlot)
ScholPlot <- ggplot(data=long_Data) + geom_point(aes(x=Years, y=Total, color = Region)) +
geom_line(aes(x=Years, y=Total, group = Region), color = Region)
print(ScholPlot)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/Script_for_the_plot.R')
library(swirl)
swirl()
path2csv
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
format(Sys.time(), "%a %b %d %X %Y")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(5:20))
select(cran, -(x:size))
select(cran, -(2:size))
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package = "swirl")
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <="3.0.2", country == "IN")
filter(cran, r_version <="3.0.2"| country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3,5, NA, 10))
!is.na(c(3,5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_gb = size_mb/2^10)
mutate(cran3, size_mb = size /2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(.cran, package)
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs= 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
View(top_counts)
View(top_counts)
arrange (top_counts, desc(count))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit-
submit()
submit()
View(result3)
cran%>%
seclect(ip_id,country,package, size)%>% print
select(ip_id,country,package, size)%>% print
cran%>%select(ip_id,country,package, size)%>% print
submit()
submit()
submit()
submit()
library(tidyr)
studentst
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(data = res, col=sex_class, into = c("sex", "class"))
submit(Ã )
submit()
students3
submit()
submit()
submit()
submit()
submit()
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(readr)
parse_number("class5")
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R')
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R', echo=TRUE)
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R', echo=TRUE)
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R', echo=TRUE)
myRegions <- theRegions %>%
select(NAME, SUBREGION) %>%
mutate(as.factor(SUBREGION), as.character(NAME))
myRegions
myRegions <- theRegions %>%
select(NAME, SUBREGION) %>%
mutate(as.factor(SUBREGION), as.character(NAME))
myRegions <- df_tbl(theRegions) %>%
select(NAME, SUBREGION) %>%
mutate(as.factor(SUBREGION), as.character(NAME))
myRegions <- tbl_df(theRegions) %>%
select(NAME, SUBREGION) %>%
mutate(as.factor(SUBREGION), as.character(NAME))
myRegions <- tbl_df(theRegions) %>%
select(NAME, SUBREGION) %>%
mutate(as.factor(SUBREGION), as.character(NAME)) %>%
mutate(SUBR_NAMES <- filter(SUBREGION %in% c(39, 151, 154, 155))
myRegions <- tbl_df(theRegions) %>%
select(NAME, SUBREGION) %>%
mutate(as.factor(SUBREGION), as.character(NAME)) %>%
view(levelSumm)
View(levelSumm)
levelSumm
View(OrderedList)
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R', echo=TRUE)
myRegions$Regions[myRegions$Regions =="0"] <- "Antarctica"
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R', echo=TRUE)
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R', echo=TRUE)
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R', echo=TRUE)
myRegions
rm(myRegions)
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R')
myRegions
theRegions
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R', echo=TRUE)
class(OrderedList)
myRegions
OrderedList
group_by(myRegions, SUBREGION)
count(group_by(myRegions, SUBREGION))
source('C:/Users/Kroutz-/Dropbox/MOOCS/DATA/DATA_Knight/R_FrenchScholarships/FrScholMapScript.R', echo=TRUE)
myRegions
